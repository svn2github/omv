#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2012 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

case "$1" in
	configure)
		########################################################################
		# Set the default settings of the nut package to those expected
		# by OpenMediaVault.
		########################################################################
		if [ -z "$2" ]; then
			echo "Updating init script links and actions"
			invoke-rc.d --force nut stop
			update-rc.d nut disable &>/dev/null
			invoke-rc.d --force ups-monitor stop
			update-rc.d ups-monitor disable &>/dev/null
		fi

		########################################################################
		# Update file permissions.
		########################################################################
		echo "Updating permissions"
		omv_install_fixperms

		########################################################################
		# Install locale files.
		########################################################################
		echo "Installing locale files ..."
		omv_install_locale

		########################################################################
		# Update the configuration.
		# <config>
		#   <services>
		#     <nut>
		#       <enable>0|1</enable>
		#       <upsname>xxx</upsname>
		#       <comment>xxx</comment>
		#       <driverconf>xxx</driverconf>
		#       <shutdownmode>fsd|onbatt<shutdownmode>
		#       <shutdowntimer>xxx</shutdowntimer>
		#       <remotemonitor>0|1</remotemonitor>
		#       <remoteuser></remoteuser>
		#       <remotepassword></remotepassword>
		#     </nut>
		#   </services>
		# </config>
		########################################################################
		if ! omv_config_exists "//services/nut"; then
			echo "Initialize configuration"
			object="<enable>0</enable>"
			object="${object}<upsname>ups</upsname>"
			object="${object}<comment></comment>"
			object="${object}<driverconf></driverconf>"
			object="${object}<shutdownmode>onbatt</shutdownmode>"
			object="${object}<shutdowntimer>30</shutdowntimer>"
			object="${object}<remotemonitor>0</remotemonitor>"
			object="${object}<remoteuser></remoteuser>"
			object="${object}<remotepassword></remotepassword>"
			omv_config_add_element "//services" "nut" "${object}" true
		fi

		########################################################################
		# Generate configurations
		########################################################################
		if [ -z "$2" ]; then
			udevadm trigger
		fi
		omv-mkconf collectd

		########################################################################
		# Restart services
		########################################################################
		echo "Restarting services ..."
		monit restart collectd

		########################################################################
		# Action to be done depending on the previous version.
		########################################################################
		echo "Updating configuration ..."
		if dpkg --compare-versions "$2" lt-nl "0.1.4"; then
			udevadm trigger
		fi
		if dpkg --compare-versions "$2" lt-nl "0.1.6"; then
			omv-mkconf nut
			udevadm trigger
		fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument '$1'" >&2
		exit 1
	;;
esac

exit 0
